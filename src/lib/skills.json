{
  "websites": [
    {
      "domain": ["amazon.com", "amazon.co.uk", "amazon.de"],
      "skills": [
        {
          "name": "search_products",
          "description": "Search for a product on Amazon. this skill will take the user query as input, and perform the search on amazon.com and it will return the list of results of products.",
          "input":  { "text": "string" },
          "output": "results",
          "steps": [
            { "action": "navigate_to_url", "url": "https://www.amazon.com" },
            { "action": "wait_for_selector", "selector": "#twotabsearchtextbox" },
            { "action": "click",              "selector": "#twotabsearchtextbox" },
            { "action": "type",               "selector": "#twotabsearchtextbox", "input_key": "text" },
            { "action": "press_enter" },
            { "action": "wait_for_selector",  "selector": "div[data-component-type='s-search-result'][data-asin]:not([data-asin=''])" },
            { "action": "scroll_down",        "times": 3 },
            {
              "action":     "extract_list",
              "selector":   "div[data-component-type='s-search-result'][data-asin]:not([data-asin=''])",
              "schema": {
                "asin": "@data-asin",
                "title": "[data-cy='title-recipe'] a h2::text",
                "price": "[data-cy='price-recipe'] .a-row [aria-describedby='price-link'] .a-price .a-offscreen::text",
                "link": "[data-cy='title-recipe'] a::href"
              },
              "output_key": "results"
            }
          ]
        },
        {
          "name": "open_result_by_index",
          "description": "Navigate to the N-th product page that was returned by search_products.",
          "input":  { "index": "number" },
          "output": "product_url",
          "steps": [
            { "action": "navigate_to_url",      "url": "{{url_override}}" },
            { "action": "wait_for_selector",    "selector": "#productTitle" },
            { "action": "scroll_down",          "times": 1 }
          ]
        },
        {
          "name": "extract_product_details",
          "description": "Extract the details of the product from the current page. This skill will return the details of the product as output, for example: title, price, rating.",
          "output": "results",
          "steps": [
            { "action": "wait_for_selector", "selector": "#productTitle" },
            {
              "action":     "extract_fields",
              "selector":   "#productTitle, #corePriceDisplay_desktop_feature_div span#aok-offscreen, #averageCustomerReviews span#acrPopover",
              "output_key": "results"
            }
          ]
        },
        {
          "name": "add_current_product_to_cart",
          "description": "Click \"Add to cart\" button. This skill will return the count of the products in the cart as output.",
          "output": "results",
          "steps": [
            { "action": "wait_for_selector", "selector": "#addToCart_feature_div #add-to-cart-button" },
            { "action": "click",             "selector": "#addToCart_feature_div #add-to-cart-button" },
            { "action": "wait_for_selector", "selector": "#nav-cart-count" },
            {
              "action":     "extract_fields",
              "selector":   "#nav-cart-count",
              "output_key": "results"
            }
          ]
        }
      ]
    },
    {
      "domain": ["gmail.com", "mail.google.com"],
      "skills": [
        {
          "name": "search_emails",
          "description": "Use Gmail search bar to find messages and return the visible result rows (subject, sender, snippet, link). This skill will take the user query as input, and perform the search on gmail.com and it will return the list of results of emails.",
          "input":  { "text": "string" },
          "output": "results",
          "steps": [
            { "action": "navigate_to_url",   "url": "https://mail.google.com" },
            { "action": "wait_for_selector", "selector": "input[name='q']" },
            { "action": "click",             "selector": "input[name='q']" },
            { "action": "type",              "selector": "input[name='q']", "input_key": "text" },
            { "action": "press_enter" },
            { "action": "wait_for_selector", "selector": "tr.zA[role='row'] span.il, td.TC" },
            {
              "action":   "extract_list",
              "selector": "div[role='main'] tr.zA[role='row']",
              "schema": {
                "sender":   "span.yP::text",
                "subject":  "span.bog::text",
                "snippet":  "span.y2::text",
                "link":     "a::href"
              },
              "output_key": "results"
            }
          ]
        },
        {
          "name": "open_email_by_index",
          "description": "Open the N-th email in the current search / inbox view. This skill will take the index of the result as input, and open the result page.",
          "input":  { "index": "number" },
          "output": "results",
          "steps": [
            { "action": "wait_for_selector", "selector": "div[role='main'] tr.zA[role='row']" },
            {
              "action": "click_element_by_index",
              "selector": "div[role='main'] tr.zA[role='row']",
              "index": 0
            },
            { "action": "wait_for_selector", "selector": "h2.hP" },
            {
              "action": "extract_fields",
              "selector": "link[rel='canonical']::href",
              "output_key": "results"
            }
          ]
        },
        {
          "name": "extract_email_details",
          "description": "Inside an open thread, capture subject, sender, date, and body snippet of the email. This skill will return the details of the email as output.",
          "output": "results",
          "steps": [
            { "action": "wait_for_selector", "selector": "h2.hP" },
            {
              "action":     "extract_fields",
              "selector":   "h2.hP, span.gD, span.g3, div.a3s",
              "output_key": "results"
            }
          ]
        },
        {
          "name": "compose_and_send_email",
          "description": "Compose and send an email. This skill will take the email details as input, and send the email.",
          "input": {
            "to":      "string",
            "subject": "string",
            "body":    "string"
          },
          "output": "results",
          "steps": [
            { "action": "wait_for_selector", "selector": ".T-I.T-I-KE.L3" },
            { "action": "click",             "selector": ".T-I.T-I-KE.L3" },
            { "action": "wait_for_selector", "selector": "textarea[name='to']" },
            { "action": "type",              "selector": "textarea[name='to']",          "input_key": "to" },
            { "action": "type",              "selector": "input[name='subjectbox']",     "input_key": "subject" },
            { "action": "type",              "selector": "div[aria-label='Message Body']", "input_key": "body" },
            { "action": "click",             "selector": "div[aria-label^='Send']" },
            { "action": "wait_for_selector", "selector": "span.bAq" },
            {
              "action":     "extract_fields",
              "selector":   "span.bAq",
              "output_key": "results"
            }
          ]
        },
        {
          "name": "reply_current_email",
          "description": "Click Reply in the open conversation, type a message, send it, and return Gmail's confirmation banner.",
          "input": { "text": "string" },
          "output": "results",
          "steps": [
            { "action": "wait_for_selector", "selector": "button[role='link'][aria-label='Reply']" },
            { "action": "click", "selector": "button[role='link'][aria-label='Reply']" },
            { "action": "wait_for_selector", "selector": "div[aria-label='Message Body'][role='textbox']" },
            { "action": "type", "selector": "div[aria-label='Message Body'][role='textbox']", "input_key": "text" },
            { "action": "click", "selector": "div[role='button'][data-tooltip^='Send']" },
            { "action": "wait_for_selector", "selector": "span.bAq" },
            { "action": "extract_fields", "selector": "span.bAq", "output_key": "results" }
          ]
        }
      ]
    },
    {
      "domain": ["notion.so", "notion.com"],
      "skills": [
        {
          "name": "search_pages",
          "description": "Search your Notion workspace for pages whose titles match a query and return the visible results (title, link).",
          "input":  { "text": "string" },
          "output": "results",
          "steps": [
            { "action": "navigate_to_url", "url": "https://www.notion.so" },
            { "action": "wait_for_selector", "selector": "div[role='button'] svg.magnifyingGlass" },
            { "action": "click",             "selector": "div[role='button'] svg.magnifyingGlass" },
            { "action": "wait_for_selector", "selector": "input[role='combobox'][placeholder^='Search']" },
            { "action": "type",              "selector": "input[role='combobox'][placeholder^='Search']", "input_key": "text" },
            { "action": "wait_for_selector", "selector": "div[role='listbox'] div[role='option']" },
            {
              "action":     "extract_list",
              "selector":   "div[role='listbox'] div[role='option']",
              "schema": {
                "title": ".notranslate::text",
                "link":  "a::href"
              },
              "output_key": "results"
            }
          ]
        },
    
        {
          "name": "open_page_by_index",
          "description": "Open the N-th page from the current search results. This skill will take the index of the result as input, and open the result page.",
          "input":  { "index": "number" },
          "steps": [
            { "action": "wait_for_selector", "selector": "div[role='option'].search-query-result-item" },
            {
              "action":   "click_element_by_index",
              "selector": "div[role='option'].search-query-result-item",
              "index":     0
            },
            { "action": "wait_for_selector", "selector": "h1.notranslate[contenteditable='true']" }
          ]
        },
    
        {
          "name": "extract_page_content",
          "description": "Capture the page title and the visible rich-text blocks from the open Notion page.",
          "output": "results",
          "steps": [
            { "action": "wait_for_selector", "selector": "h1.notranslate[contenteditable='true']" },
            { "action": "wait_for_selector", "selector": "div.notion-page-content" },
            {
              "action": "extract_fields",
              "selector": "h1.notranslate[contenteditable='true']::text, div.notion-page-content div[contenteditable='true']::text",
              "output_key": "results",
              "schema": {
                "title": "h1.notranslate[contenteditable='true']::text",
                "body":  "div.notion-page-content div[contenteditable='true']::text"
              }
            }
          ]
        },
    
        {
          "name": "create_page",
          "description": "Create a new top-level Notion page. Supply one `text` string formatted as `title<<<rt-space>>>body`; the runner splits it into title and body.",
          "input": {
            "text": "string"
          },
          "output": "results",
          "steps": [
            { "action": "navigate_to_url", "url": "https://www.notion.so" },
            { "action": "wait_for_selector", "selector": "[data-testid='new-page-button']" },
            { "action": "click",             "selector": "[data-testid='new-page-button']" },
            { "action": "wait_for_selector", "selector": "h1.notranslate[contenteditable='true']" },
            { "action": "type",              "selector": "h1.notranslate[contenteditable='true']", "input_key": "text", "split": "before" },
            { "action": "wait_for_selector", "selector": "div.notion-page-content div.notranslate[contenteditable='true']" },
            { "action": "type",              "selector": "div.notion-page-content div.notranslate[contenteditable='true']", "input_key": "text", "split": "after" },
            {
              "action":     "extract_fields",
              "selector":   "link[rel='canonical']::href",
              "output_key": "results"
            }
          ]
        }
      ]
    },
    {
      "domain": ["x.com", "twitter.com"],
      "skills": [
        {
          "name": "search_tweets",
          "description": "Search X for tweets that match a query and return the visible results (user, text, link).",
          "input": { "text": "string" },
          "output": "results",
          "steps": [
            { "action": "navigate_to_url", "url": "https://x.com/explore" },
            { "action": "wait_for_selector", "selector": "input[data-testid='SearchBox_Search_Input']" },
            { "action": "click",             "selector": "input[data-testid='SearchBox_Search_Input']" },
            { "action": "type",              "selector": "input[data-testid='SearchBox_Search_Input']", "input_key": "text" },
            { "action": "press_enter" },
            { "action": "wait_for_selector", "selector": "article[data-testid='tweet']" },
            { "action": "scroll_down", "times": 10 },
            { "action": "wait_for_selector", "selector": "div[data-testid='cellInnerDiv']:nth-of-type(2)" },
            {
              "action":   "extract_list",
              "selector": "div[data-testid='cellInnerDiv']",
              "schema": {
                "user": "article a[role='link'] span::text",
                "text": "article div[lang]::text",
                "link": "article a[href*='/status/']::href"
              },
              "output_key": "results"
            }
          ]
        },
        {
          "name": "read_home_feed",
          "description": "Grab the first screenful of tweets from the Home timeline.",
          "output": "results",
          "steps": [
            { "action": "navigate_to_url", "url": "https://x.com/home" },
            { "action": "wait_for_selector", "selector": "article[data-testid='tweet']" },
            { "action": "scroll_down", "times": 10 },
            { "action": "wait_for_selector", "selector": "div[data-testid='cellInnerDiv']:nth-of-type(2)" },
            {
              "action":   "extract_list",
              "selector": "article[data-testid='tweet']",
              "schema": {
                "user": "a[role='link'] span::text",
                "text": "div[lang]::text",
                "link": "a[href*='/status/']::href"
              },
              "output_key": "results"
            }
          ]
        },
        {
          "name": "open_tweet_by_index",
          "description": "Open the N-th tweet in the current list view (Home or Search).",
          "input": { "index": "number" },
          "steps": [
            { "action": "wait_for_selector", "selector": "div[data-testid='cellInnerDiv']" },
            {
              "action": "click_element_by_index",
              "selector": "div[data-testid='cellInnerDiv']",
              "index": "0"
            },
            { "action": "wait_for_selector", "selector": "article[role='article'] time" }
          ]
        },
        {
          "name": "read_tweet_comments",
          "description": "Collect the visible replies under the tweet that’s currently open (user, text, link).",
          "output": "comment_results",
          "steps": [
            { "action": "wait_for_selector", "selector": "div[aria-label='Timeline: Conversation'] div[data-testid='tweet']" },
            {
              "action":   "extract_list",
              "selector": "div[aria-label='Timeline: Conversation'] div[data-testid='tweet']:not(:first-of-type)",
              "schema": {
                "user": "a[role='link'] span::text",
                "text": "div[lang]::text",
                "link": "a[href*='/status/']::href"
              },
              "output_key": "comment_results"
            }
          ]
        },
        {
          "name": "reply_to_current_tweet",
          "description": "Reply to the tweet currently open in the viewer.",
          "input": { "text": "string" },
          "output": "reply_status",
          "steps": [
            { "action": "wait_for_selector", "selector": "div[data-testid='reply']" },
            { "action": "click",             "selector": "div[data-testid='reply']" },
            { "action": "wait_for_selector", "selector": "div[role='dialog'] div[role='textbox']" },
            { "action": "type",              "selector": "div[role='dialog'] div[role='textbox']", "input_key": "text" },
            { "action": "click",             "selector": "div[role='dialog'] div[data-testid='tweetButton']" },
            { "action": "wait_for_selector", "selector": "div[role='alert']" },
            {
              "action":   "extract_fields",
              "selector": "div[role='alert']::text",
              "output_key": "reply_status"
            }
          ]
        }
      ]
    },
    {
      "domain": ["docs.google.com/spreadsheets", "sheets.google.com"],
      "skills": [
        {
          "name": "open_spreadsheet",
          "description": "Open a Google Sheets URL and wait for the grid to be ready.",
          "input": { "url": "string" },
          "output": "status",
          "steps": [
            { "action": "navigate_to_url",   "url": "{{url}}" },
            { "action": "wait_for_selector", "selector": "[role='grid']" },
            { "action": "extract_fields",    "selector": "title::text", "output_key": "status" }
          ]
        },

        {
          "name": "create_new_sheet_tab",
          "description": "Add a new sheet (tab) in the current spreadsheet. Optional name: if provided, rename immediately.",
          "input": { "name": "string?" },
          "output": "sheet_name",
          "steps": [
            { "action": "wait_for_selector", "selector": "[aria-label='Add Sheet']" },
            { "action": "click",             "selector": "[aria-label='Add Sheet']" },
            { "action": "wait_for_selector", "selector": "[role='tab'][aria-selected='true']" },
            { "action": "conditional",
              "if": "{{name}}",
              "then": [
                { "action": "double_click", "selector": "[role='tab'][aria-selected='true']" },
                { "action": "wait_for_selector", "selector": "input[aria-label='Sheet name']" },
                { "action": "type", "selector": "input[aria-label='Sheet name']", "input_key": "name", "replace": true },
                { "action": "press_enter" }
              ]
            },
            { "action": "extract_fields", "selector": "[role='tab'][aria-selected='true']::text", "output_key": "sheet_name" }
          ]
        },

        {
          "name": "select_range",
          "description": "Select a range using the Name box (e.g., 'A1', 'A1:C10', 'A:A', '1:1').",
          "input": { "range": "string" },
          "output": "selected_range",
          "steps": [
            { "action": "wait_for_selector", "selector": "input[aria-label='Name box']" },
            { "action": "click",             "selector": "input[aria-label='Name box']" },
            { "action": "type",              "selector": "input[aria-label='Name box']", "input_key": "range", "replace": true },
            { "action": "press_enter" },
            { "action": "extract_fields",    "selector": "input[aria-label='Name box']::value", "output_key": "selected_range" }
          ]
        },

        {
          "name": "set_cell_value",
          "description": "Set a single cell value using the Name box + Formula bar. Overwrites existing content.",
          "input": { "cell": "string", "value": "string" },
          "output": "result",
          "steps": [
            { "action": "wait_for_selector", "selector": "input[aria-label='Name box']" },
            { "action": "click",             "selector": "input[aria-label='Name box']" },
            { "action": "type",              "selector": "input[aria-label='Name box']", "input_key": "cell", "replace": true },
            { "action": "press_enter" },

            { "action": "wait_for_selector", "selector": "[aria-label='Formula bar']" },
            { "action": "click",             "selector": "[aria-label='Formula bar']" },
            { "action": "type",              "selector": "[aria-label='Formula bar']", "input_key": "value", "replace": true },
            { "action": "press_enter" },

            { "action": "extract_fields", "selector": "[aria-label='Formula bar']::text", "output_key": "result" }
          ]
        },

        {
          "name": "set_formula",
          "description": "Insert a formula into a single cell (e.g., '=SUM(A2:A10)').",
          "input": { "cell": "string", "formula": "string" },
          "output": "result",
          "steps": [
            { "action": "wait_for_selector", "selector": "input[aria-label='Name box']" },
            { "action": "click",             "selector": "input[aria-label='Name box']" },
            { "action": "type",              "selector": "input[aria-label='Name box']", "input_key": "cell", "replace": true },
            { "action": "press_enter" },

            { "action": "wait_for_selector", "selector": "[aria-label='Formula bar']" },
            { "action": "click",             "selector": "[aria-label='Formula bar']" },
            { "action": "type",              "selector": "[aria-label='Formula bar']", "input_key": "formula", "replace": true },
            { "action": "press_enter" },

            { "action": "extract_fields", "selector": "[aria-label='Formula bar']::text", "output_key": "result" }
          ]
        },

        {
          "name": "get_cell_value",
          "description": "Read a single cell's value by selecting it and reading the Formula bar (shows computed value for values, the formula for formulas).",
          "input": { "cell": "string" },
          "output": "cell_value",
          "steps": [
            { "action": "wait_for_selector", "selector": "input[aria-label='Name box']" },
            { "action": "click",             "selector": "input[aria-label='Name box']" },
            { "action": "type",              "selector": "input[aria-label='Name box']", "input_key": "cell", "replace": true },
            { "action": "press_enter" },
            { "action": "wait_for_selector", "selector": "[aria-label='Formula bar']" },
            { "action": "extract_fields",    "selector": "[aria-label='Formula bar']::text", "output_key": "cell_value" }
          ]
        },

        {
          "name": "apply_basic_formatting",
          "description": "Apply simple formatting to a selected range using toolbar buttons. Supported: bold, italic, underline, fill_color (named), number_format (e.g., 'Percent'). Requires the range to be selected first.",
          "input": {
            "bold": "boolean?",
            "italic": "boolean?",
            "underline": "boolean?",
            "fill_color": "string?",
            "number_format": "string?"
          },
          "output": "status",
          "steps": [
            { "action": "conditional",
              "if": "{{bold}}",
              "then": [
                { "action": "wait_for_selector", "selector": "[aria-label='Bold']" },
                { "action": "click",             "selector": "[aria-label='Bold']" }
              ]
            },
            { "action": "conditional",
              "if": "{{italic}}",
              "then": [
                { "action": "wait_for_selector", "selector": "[aria-label='Italic']" },
                { "action": "click",             "selector": "[aria-label='Italic']" }
              ]
            },
            { "action": "conditional",
              "if": "{{underline}}",
              "then": [
                { "action": "wait_for_selector", "selector": "[aria-label='Underline']" },
                { "action": "click",             "selector": "[aria-label='Underline']" }
              ]
            },
            { "action": "conditional",
              "if": "{{fill_color}}",
              "then": [
                { "action": "wait_for_selector", "selector": "[aria-label='Fill color']" },
                { "action": "click",             "selector": "[aria-label='Fill color']" },
                { "action": "wait_for_selector", "selector": "[aria-label='Fill color'] [role='menu'] [role='menuitem']" },
                { "action": "click_text",        "text": "{{fill_color}}" }
              ]
            },
            { "action": "conditional",
              "if": "{{number_format}}",
              "then": [
                { "action": "wait_for_selector", "selector": "[aria-label='More formats']" },
                { "action": "click",             "selector": "[aria-label='More formats']" },
                { "action": "wait_for_selector", "selector": "[role='menu'] [role='menuitem']" },
                { "action": "click_text",        "text": "{{number_format}}" }
              ]
            },
            { "action": "extract_fields", "selector": "title::text", "output_key": "status" }
          ]
        },

        {
          "name": "insert_rows",
          "description": "Insert rows relative to a target row using the 'Search the menus' box. position ∈ {'above','below'}.",
          "input": { "target_row": "number", "count": "number", "position": "string" },
          "output": "status",
          "steps": [
            { "action": "type", "selector": "input[aria-label='Name box']", "text": "{{target_row}}:{{target_row}}", "replace": true },
            { "action": "press_enter" },

            { "action": "wait_for_selector", "selector": "[aria-label='Search the menus']" },
            { "action": "click",             "selector": "[aria-label='Search the menus']" },
            { "action": "type",              "selector": "[aria-label='Search the menus']",
              "text": "insert {{count}} row {{position}}" },
            { "action": "press_enter" },

            { "action": "extract_fields", "selector": "input[aria-label='Name box']::value", "output_key": "status" }
          ]
        },

        {
          "name": "insert_columns",
          "description": "Insert columns relative to a target column using the 'Search the menus' box. position ∈ {'left','right'}. column like 'B'.",
          "input": { "target_column": "string", "count": "number", "position": "string" },
          "output": "status",
          "steps": [
            { "action": "type", "selector": "input[aria-label='Name box']", "text": "{{target_column}}:{{target_column}}", "replace": true },
            { "action": "press_enter" },

            { "action": "wait_for_selector", "selector": "[aria-label='Search the menus']" },
            { "action": "click",             "selector": "[aria-label='Search the menus']" },
            { "action": "type",              "selector": "[aria-label='Search the menus']",
              "text": "insert {{count}} column {{position}}" },
            { "action": "press_enter" },

            { "action": "extract_fields", "selector": "input[aria-label='Name box']::value", "output_key": "status" }
          ]
        },

        {
          "name": "sort_range",
          "description": "Sort a range by a given column within that range. order ∈ {'asc','desc'}. Uses 'Search the menus'.",
          "input": { "range": "string", "by_column": "string", "order": "string" },
          "output": "status",
          "steps": [
            { "action": "wait_for_selector", "selector": "input[aria-label='Name box']" },
            { "action": "click",             "selector": "input[aria-label='Name box']" },
            { "action": "type",              "selector": "input[aria-label='Name box']", "input_key": "range", "replace": true },
            { "action": "press_enter" },

            { "action": "click", "selector": "[aria-label='Search the menus']" },
            { "action": "type",
              "selector": "[aria-label='Search the menus']",
              "text": "sort range by column {{by_column}}, {{order=='asc' ? 'A to Z' : 'Z to A'}}" },
            { "action": "press_enter" },

            { "action": "extract_fields", "selector": "input[aria-label='Name box']::value", "output_key": "status" }
          ]
        },

        {
          "name": "create_filter",
          "description": "Create a filter view for a selected range (or the whole sheet if none selected).",
          "input": { "range": "string?" },
          "output": "status",
          "steps": [
            { "action": "conditional",
              "if": "{{range}}",
              "then": [
                { "action": "click", "selector": "input[aria-label='Name box']" },
                { "action": "type",  "selector": "input[aria-label='Name box']", "input_key": "range", "replace": true },
                { "action": "press_enter" }
              ]
            },
            { "action": "click", "selector": "[aria-label='Search the menus']" },
            { "action": "type",  "selector": "[aria-label='Search the menus']", "text": "create a filter" },
            { "action": "press_enter" },
            { "action": "extract_fields", "selector": "title::text", "output_key": "status" }
          ]
        },

        {
          "name": "read_visible_table",
          "description": "Extract the visible grid cells on screen (user’s current viewport). Returns array of cells with aria-rowindex/aria-colindex and text.",
          "output": "results",
          "steps": [
            { "action": "wait_for_selector", "selector": "[role='grid'] [role='row'] [role='gridcell']" },
            {
              "action": "extract_list",
              "selector": "[role='grid'] [role='row'] [role='gridcell']",
              "schema": {
                "row": "@aria-rowindex",
                "col": "@aria-colindex",
                "text": "::text"
              },
              "output_key": "results"
            }
          ]
        },

        {
          "name": "run_macro_or_script",
          "description": "Execute a named macro or Apps Script via the menu search box. Provide the exact menu phrase if possible.",
          "input": { "command": "string" },
          "output": "status",
          "steps": [
            { "action": "wait_for_selector", "selector": "[aria-label='Search the menus']" },
            { "action": "click",             "selector": "[aria-label='Search the menus']" },
            { "action": "type",              "selector": "[aria-label='Search the menus']", "input_key": "command", "replace": true },
            { "action": "press_enter" },
            { "action": "extract_fields",    "selector": "title::text", "output_key": "status" }
          ]
        }
      ]
    }
      
  ]
}